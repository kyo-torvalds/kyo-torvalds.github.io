<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2021-08-24T20:28:00-05:00</updated><id>http://0.0.0.0:4000/feed.xml</id><entry><title type="html">Makingfilm</title><link href="http://0.0.0.0:4000/frontend/2021/08/22/makingfilm.html" rel="alternate" type="text/html" title="Makingfilm" /><published>2021-08-22T00:00:00-05:00</published><updated>2021-08-22T00:00:00-05:00</updated><id>http://0.0.0.0:4000/frontend/2021/08/22/makingfilm</id><content type="html" xml:base="http://0.0.0.0:4000/frontend/2021/08/22/makingfilm.html">&lt;p&gt;블로그의 폰트는 pretendard&lt;/p&gt;</content><author><name>jason</name></author><category term="Frontend" /><summary type="html">블로그의 폰트는 pretendard</summary></entry><entry><title type="html">🧓 블로그 제작기</title><link href="http://0.0.0.0:4000/frontend/2021/08/14/makingBlog.html" rel="alternate" type="text/html" title="🧓 블로그 제작기" /><published>2021-08-14T00:00:00-05:00</published><updated>2021-08-14T00:00:00-05:00</updated><id>http://0.0.0.0:4000/frontend/2021/08/14/makingBlog</id><content type="html" xml:base="http://0.0.0.0:4000/frontend/2021/08/14/makingBlog.html">&lt;h2 id=&quot;나만의-블로그-만들기&quot;&gt;나만의 블로그 만들기&lt;/h2&gt;

&lt;p&gt;코딩을 시작한 뒤로 부쩍 블로그를 많이 보게되었다. 티스토리, 네이버 블로그 , 워드프레스 등등의 플랫폼이 있지만 가장 눈에 띈건 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github.io&lt;/code&gt;였다.  하나하나  커스터마이징 할 수 있는 점이 매력적이었다. 언젠가는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github.io&lt;/code&gt;를 만드려고 했는데 
잠시 일을 쉬게 돼서 시간적 여유가 생겼다. 조금씩 블로그를 만들기 시작했고 여름방학이 끝날 때쯤, 블로그를 완성했다.&lt;/p&gt;

&lt;p&gt;나에겐 형이 한 명 있다. 형은 따끈따끈 신입 개발자다.(나는 아직 대학생..) 
우리는 밤마다 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typescript&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git&lt;/code&gt; 등등을 공부하고있다. 이 블로그에는 우리가 공부했던 것들을 정리할 예정이다. 우리가 함께 공부했던 지식은 Etc나 Devops에 올라갈 예정이다. 추가로 백앤드 개발자인 형은 Backend 목록에 업로드를 하고 나는 Frontend 목록에 업로드를 할 예정이다.&lt;/p&gt;

&lt;h2 id=&quot;home-만들기&quot;&gt;Home 만들기&lt;/h2&gt;
&lt;p&gt;Home에는 animation을 넣고 싶었다. 개인적으로 interactive design을 굉장히 좋아한다. 그래서 Home을 만들 때 interactive developer 김종민님과 Anzi님의 작품을 따라하려고 노력했다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=LLfhY4eVwDY&quot;&gt;interactive developer님의 작품&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://lp.anzi.kr/?page=about&quot;&gt;anzi님의 작품&lt;/a&gt; : 음악조차 간지난다;&lt;/p&gt;

&lt;h2 id=&quot;style-구성&quot;&gt;style 구성&lt;/h2&gt;
&lt;p&gt;호불호 없고 깔끔한 디자인을 원했다. 그래서 웹서핑을 하면서 괜찮게 생각한 디자인들을 가져와서 코드로 작성했다. 모든 요소들이 다 중요하지만 폰트선택에 많은 신경을 썼다. 구글링을 해도 마음에 드는 폰트를 찾지 못했는데 우연히 디자이너 오픈 톡방에서 &lt;strong&gt;Pretendard&lt;/strong&gt; 라는 폰트를 보게 됐다. 이 폰트는 명작이다..!&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;codeBlock&lt;/code&gt;은 노션을 참고했다. 폰트는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nanum Gothic Coding&lt;/code&gt;이다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;h태그&quot;&gt;h태그&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;,&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h3&amp;gt;&lt;/code&gt;와 같은 h태그들은 남색의 left-border를 가진다.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;금교영 힘들다 왜케 인생은 힘들까&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>KyoYoung</name></author><category term="Frontend" /><summary type="html">나만의 블로그 만들기 코딩을 시작한 뒤로 부쩍 블로그를 많이 보게되었다. 티스토리, 네이버 블로그 , 워드프레스 등등의 플랫폼이 있지만 가장 눈에 띈건 github.io였다. 하나하나 커스터마이징 할 수 있는 점이 매력적이었다. 언젠가는 github.io를 만드려고 했는데 잠시 일을 쉬게 돼서 시간적 여유가 생겼다. 조금씩 블로그를 만들기 시작했고 여름방학이 끝날 때쯤, 블로그를 완성했다. 나에겐 형이 한 명 있다. 형은 따끈따끈 신입 개발자다.(나는 아직 대학생..) 우리는 밤마다 typescript,docker,git 등등을 공부하고있다. 이 블로그에는 우리가 공부했던 것들을 정리할 예정이다. 우리가 함께 공부했던 지식은 Etc나 Devops에 올라갈 예정이다. 추가로 백앤드 개발자인 형은 Backend 목록에 업로드를 하고 나는 Frontend 목록에 업로드를 할 예정이다. Home 만들기 Home에는 animation을 넣고 싶었다. 개인적으로 interactive design을 굉장히 좋아한다. 그래서 Home을 만들 때 interactive developer 김종민님과 Anzi님의 작품을 따라하려고 노력했다. interactive developer님의 작품 anzi님의 작품 : 음악조차 간지난다; style 구성 호불호 없고 깔끔한 디자인을 원했다. 그래서 웹서핑을 하면서 괜찮게 생각한 디자인들을 가져와서 코드로 작성했다. 모든 요소들이 다 중요하지만 폰트선택에 많은 신경을 썼다. 구글링을 해도 마음에 드는 폰트를 찾지 못했는데 우연히 디자이너 오픈 톡방에서 Pretendard 라는 폰트를 보게 됐다. 이 폰트는 명작이다..! codeBlock은 노션을 참고했다. 폰트는 Nanum Gothic Coding이다. const a = 3; const b = 4; const c = a+b; h태그 &amp;lt;h1&amp;gt;,&amp;lt;h2&amp;gt;,&amp;lt;h3&amp;gt;와 같은 h태그들은 남색의 left-border를 가진다. console.log(&quot;금교영 힘들다 왜케 인생은 힘들까&quot;)</summary></entry><entry><title type="html">Kiwifruit</title><link href="http://0.0.0.0:4000/frontend/2018/08/22/kiwifruit.html" rel="alternate" type="text/html" title="Kiwifruit" /><published>2018-08-22T00:00:00-05:00</published><updated>2018-08-22T00:00:00-05:00</updated><id>http://0.0.0.0:4000/frontend/2018/08/22/kiwifruit</id><content type="html" xml:base="http://0.0.0.0:4000/frontend/2018/08/22/kiwifruit.html">&lt;p&gt;Kiwifruit (often abbreviated as kiwi), or Chinese gooseberry is the edible
berry of several species of woody vines in the genus Actinidia.&lt;/p&gt;

&lt;p&gt;The most common cultivar group of kiwifruit is oval, about the size of a large
hen’s egg (5–8 cm (2.0–3.1 in) in length and 4.5–5.5 cm (1.8–2.2 in) in
diameter). It has a fibrous, dull greenish-brown skin and bright green or
golden flesh with rows of tiny, black, edible seeds. The fruit has a soft
texture, with a sweet and unique flavor.&lt;/p&gt;</content><author><name>ted</name></author><category term="Frontend" /><category term="Backend" /><summary type="html">Kiwifruit (often abbreviated as kiwi), or Chinese gooseberry is the edible berry of several species of woody vines in the genus Actinidia. The most common cultivar group of kiwifruit is oval, about the size of a large hen’s egg (5–8 cm (2.0–3.1 in) in length and 4.5–5.5 cm (1.8–2.2 in) in diameter). It has a fibrous, dull greenish-brown skin and bright green or golden flesh with rows of tiny, black, edible seeds. The fruit has a soft texture, with a sweet and unique flavor.</summary></entry><entry><title type="html">Apples</title><link href="http://0.0.0.0:4000/backend/2018/08/21/apples.html" rel="alternate" type="text/html" title="Apples" /><published>2018-08-21T00:00:00-05:00</published><updated>2018-08-21T00:00:00-05:00</updated><id>http://0.0.0.0:4000/backend/2018/08/21/apples</id><content type="html" xml:base="http://0.0.0.0:4000/backend/2018/08/21/apples.html">&lt;h2 id=&quot;사과는-과연-무슨-맛일까-내가-먹은-사과의-맛은&quot;&gt;사과는 과연 무슨 맛일까???? 내가 먹은 사과의 맛은???&lt;/h2&gt;
&lt;p&gt;An apple is a sweet, edible fruit produced by an apple tree.&lt;/p&gt;

&lt;p&gt;Apple trees are cultivated worldwide, and are the most widely grown species in
the genus Malus. The tree originated in Central Asia, where its wild ancestor,
Malus sieversii, is still found today. Apples have been grown for thousands of
years in Asia and Europe, and were brought to North America by European
colonists.&lt;/p&gt;

&lt;h2 id=&quot;사과는-맛이-없다&quot;&gt;사과는 맛이 없다.&lt;/h2&gt;</content><author><name>jill</name></author><category term="Backend" /><summary type="html">사과는 과연 무슨 맛일까???? 내가 먹은 사과의 맛은??? An apple is a sweet, edible fruit produced by an apple tree. Apple trees are cultivated worldwide, and are the most widely grown species in the genus Malus. The tree originated in Central Asia, where its wild ancestor, Malus sieversii, is still found today. Apples have been grown for thousands of years in Asia and Europe, and were brought to North America by European colonists. 사과는 맛이 없다.</summary></entry><entry><title type="html">Bananas</title><link href="http://0.0.0.0:4000/backend/2018/08/20/bananas.html" rel="alternate" type="text/html" title="Bananas" /><published>2018-08-20T00:00:00-05:00</published><updated>2018-08-20T00:00:00-05:00</updated><id>http://0.0.0.0:4000/backend/2018/08/20/bananas</id><content type="html" xml:base="http://0.0.0.0:4000/backend/2018/08/20/bananas.html">&lt;p&gt;A banana is an edible fruit – botanically a berry – produced by several kinds
of large herbaceous flowering plants in the genus Musa.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;바나나를 먹었습니다. 오늘은 …
&lt;span style=&quot;color:blue&quot;&gt;some &lt;strong&gt;blue&lt;/strong&gt; text&lt;/span&gt;.
아 이게 되는 군여
&lt;br /&gt; &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;\&lt;/p&gt;

&lt;p&gt;안녕하세요 이게 왜 안되는지&lt;/p&gt;

&lt;p&gt;잘 모르겠어요 …. 좀 알려주세요 …&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sfds&lt;/p&gt;

&lt;p&gt;&lt;mark style=&quot;background-color: #24292e&quot;&gt;&lt;font color=&quot;white&quot;&gt; 회색 &lt;/font&gt;&lt;/mark&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;안녕하세요&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;고정 위치(fixed position) 지정 방식 &lt;br /&gt;
고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;p&gt;즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.fixed { position: fixed; top: 0; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습이댜ㅏ 띄어쓰기가 왜 안되나여 ?&lt;/p&gt;

&lt;p&gt;절대 위치(absolute position) 지정 방식&lt;/p&gt;

&lt;p&gt;절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다.&lt;/p&gt;

&lt;p&gt;단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.absolute { position: absolute; top: 50px; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다.
정적 위치(static position) 지정 방식과 다른 방식들과의 차이점
정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .static { position: static; }

    .relative { position: relative; }

    .fixed { position: fixed; }

    .absolute { position: absolute; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;z-index 속성
HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다.&lt;/p&gt;

&lt;p&gt;z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다.&lt;/p&gt;

&lt;p&gt;스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .last {

        position: fixed;

        top: 180px; 

        left: 120px; 

        z-index: -1; 

    }

&lt;/style&gt;

&lt;p&gt;고정 위치(fixed position) 지정 방식
고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;p&gt;즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.fixed { position: fixed; top: 0; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;절대 위치(absolute position) 지정 방식
절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다.&lt;/p&gt;

&lt;p&gt;단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.absolute { position: absolute; top: 50px; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다.
정적 위치(static position) 지정 방식과 다른 방식들과의 차이점
정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .static { position: static; }

    .relative { position: relative; }

    .fixed { position: fixed; }

    .absolute { position: absolute; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;z-index 속성
HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다.&lt;/p&gt;

&lt;p&gt;z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다.&lt;/p&gt;

&lt;p&gt;스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .last {

        position: fixed;

        top: 180px; 

        left: 120px; 

        z-index: -1; 

    }

&lt;/style&gt;

&lt;p&gt;고정 위치(fixed position) 지정 방식
고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;p&gt;즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.fixed { position: fixed; top: 0; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;절대 위치(absolute position) 지정 방식
절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다.&lt;/p&gt;

&lt;p&gt;단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.absolute { position: absolute; top: 50px; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다.
정적 위치(static position) 지정 방식과 다른 방식들과의 차이점
정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .static { position: static; }

    .relative { position: relative; }

    .fixed { position: fixed; }

    .absolute { position: absolute; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;z-index 속성
HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다.&lt;/p&gt;

&lt;p&gt;z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다.&lt;/p&gt;

&lt;p&gt;스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .last {

        position: fixed;

        top: 180px; 

        left: 120px; 

        z-index: -1; 

    }

&lt;/style&gt;

&lt;p&gt;고정 위치(fixed position) 지정 방식
고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;p&gt;즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.fixed { position: fixed; top: 0; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;절대 위치(absolute position) 지정 방식
절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다.&lt;/p&gt;

&lt;p&gt;단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.absolute { position: absolute; top: 50px; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다.
정적 위치(static position) 지정 방식과 다른 방식들과의 차이점
정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .static { position: static; }

    .relative { position: relative; }

    .fixed { position: fixed; }

    .absolute { position: absolute; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;z-index 속성
HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다.&lt;/p&gt;

&lt;p&gt;z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다.&lt;/p&gt;

&lt;p&gt;스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .last {

        position: fixed;

        top: 180px; 

        left: 120px; 

        z-index: -1; 

    }

&lt;/style&gt;</content><author><name>jill</name></author><category term="Backend" /><summary type="html">A banana is an edible fruit – botanically a berry – produced by several kinds of large herbaceous flowering plants in the genus Musa. 바나나를 먹었습니다. 오늘은 … some blue text. 아 이게 되는 군여 \ 안녕하세요 이게 왜 안되는지 잘 모르겠어요 …. 좀 알려주세요 … body { transform: translate(2px); } sfds 회색 &amp;lt;h1&amp;gt;안녕하세요&amp;lt;/h1&amp;gt; 고정 위치(fixed position) 지정 방식 고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다. 즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다. 예제 코딩연습이댜ㅏ 띄어쓰기가 왜 안되나여 ? 절대 위치(absolute position) 지정 방식 절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다. 단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다. 하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다. 예제 코딩연습 ▶ 위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다. 정적 위치(static position) 지정 방식과 다른 방식들과의 차이점 정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다. 상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함. 고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함. 절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함. 예제 코딩연습 ▶ z-index 속성 HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다. z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다. 스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다. 예제 고정 위치(fixed position) 지정 방식 고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다. 즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다. 예제 코딩연습 ▶ 절대 위치(absolute position) 지정 방식 절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다. 단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다. 하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다. 예제 코딩연습 ▶ 위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다. 정적 위치(static position) 지정 방식과 다른 방식들과의 차이점 정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다. 상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함. 고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함. 절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함. 예제 코딩연습 ▶ z-index 속성 HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다. z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다. 스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다. 예제 고정 위치(fixed position) 지정 방식 고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다. 즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다. 예제 코딩연습 ▶ 절대 위치(absolute position) 지정 방식 절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다. 단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다. 하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다. 예제 코딩연습 ▶ 위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다. 정적 위치(static position) 지정 방식과 다른 방식들과의 차이점 정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다. 상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함. 고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함. 절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함. 예제 코딩연습 ▶ z-index 속성 HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다. z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다. 스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다. 예제 고정 위치(fixed position) 지정 방식 고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다. 즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다. 예제 코딩연습 ▶ 절대 위치(absolute position) 지정 방식 절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다. 단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다. 하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다. 예제 코딩연습 ▶ 위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다. 정적 위치(static position) 지정 방식과 다른 방식들과의 차이점 정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다. 상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함. 고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함. 절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함. 예제 코딩연습 ▶ z-index 속성 HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다. z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다. 스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다. 예제</summary></entry></feed>