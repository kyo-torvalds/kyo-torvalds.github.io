<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2021-08-22T07:00:22-05:00</updated><id>http://0.0.0.0:4000/feed.xml</id><entry><title type="html">Makingfilm</title><link href="http://0.0.0.0:4000/2021/08/22/makingfilm.html" rel="alternate" type="text/html" title="Makingfilm" /><published>2021-08-22T00:00:00-05:00</published><updated>2021-08-22T00:00:00-05:00</updated><id>http://0.0.0.0:4000/2021/08/22/makingfilm</id><content type="html" xml:base="http://0.0.0.0:4000/2021/08/22/makingfilm.html">&lt;p&gt;블로그의 폰트는 pretendard&lt;/p&gt;</content><author><name>jason</name></author><summary type="html">블로그의 폰트는 pretendard</summary></entry><entry><title type="html">블로그 스타일 소개</title><link href="http://0.0.0.0:4000/2021/08/14/makingBlog.html" rel="alternate" type="text/html" title="블로그 스타일 소개" /><published>2021-08-14T00:00:00-05:00</published><updated>2021-08-14T00:00:00-05:00</updated><id>http://0.0.0.0:4000/2021/08/14/makingBlog</id><content type="html" xml:base="http://0.0.0.0:4000/2021/08/14/makingBlog.html">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#나만의-블로그-만들기&quot; id=&quot;markdown-toc-나만의-블로그-만들기&quot;&gt;나만의 블로그 만들기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#home-만들기&quot; id=&quot;markdown-toc-home-만들기&quot;&gt;Home 만들기&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#h2-입니다&quot; id=&quot;markdown-toc-h2-입니다&quot;&gt;h2 입니다.&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#h3입니다&quot; id=&quot;markdown-toc-h3입니다&quot;&gt;h3입니다.&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#아-왜-안됨&quot; id=&quot;markdown-toc-아-왜-안됨&quot;&gt;아 왜 안됨?&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;나만의-블로그-만들기&quot;&gt;나만의 블로그 만들기&lt;/h2&gt;

&lt;p&gt;코딩을 시작한 뒤로 부쩍 블로그를 많이 보게되었다. 티스토리, 네이버 블로그 , 워드프레스 등등의 플랫폼이 있지만 가장 눈에 띈건 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github.io&lt;/code&gt;였다.  하나하나  커스터마이징 할 수 있는 점이 매력적이었다. 항상 올해안에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github.io&lt;/code&gt;를 만들어야지 싶었는데 2021년 여름방학이 끝날 때쯤 만들게 되었다.&lt;/p&gt;

&lt;h2 id=&quot;home-만들기&quot;&gt;Home 만들기&lt;/h2&gt;
&lt;p&gt;Home부분에는 animation을 넣고 싶었다. interactive developer 김종민님과 Anzi님의 작품을 보고 영감을 받았다. 사실 영감을 받았다라기보다는 클론 수준이다.&lt;/p&gt;

&lt;p&gt;[interactive developer]{https://www.youtube.com/watch?v=LLfhY4eVwDY}
https://lp.anzi.kr/?page=about 
음악조차 간지난다;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ㄴㄹㄴㄹ&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이건 코드 입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log(&quot;hi&quot;)&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;h2-입니다&quot;&gt;h2 입니다.&lt;/h2&gt;

&lt;h3 id=&quot;h3입니다&quot;&gt;h3입니다.&lt;/h3&gt;

&lt;h3 id=&quot;아-왜-안됨&quot;&gt;아 왜 안됨?&lt;/h3&gt;</content><author><name>kyoYoung</name></author><summary type="html">나만의 블로그 만들기 Home 만들기 h2 입니다. h3입니다. 아 왜 안됨? 나만의 블로그 만들기 코딩을 시작한 뒤로 부쩍 블로그를 많이 보게되었다. 티스토리, 네이버 블로그 , 워드프레스 등등의 플랫폼이 있지만 가장 눈에 띈건 github.io였다. 하나하나 커스터마이징 할 수 있는 점이 매력적이었다. 항상 올해안에 github.io를 만들어야지 싶었는데 2021년 여름방학이 끝날 때쯤 만들게 되었다. Home 만들기 Home부분에는 animation을 넣고 싶었다. interactive developer 김종민님과 Anzi님의 작품을 보고 영감을 받았다. 사실 영감을 받았다라기보다는 클론 수준이다. [interactive developer]{https://www.youtube.com/watch?v=LLfhY4eVwDY} https://lp.anzi.kr/?page=about 음악조차 간지난다; ㄴㄹㄴㄹ const a = 3; const b = 4; const c = a+b; 이건 코드 입니다. console.log(&quot;hi&quot;) h2 입니다. h3입니다. 아 왜 안됨?</summary></entry><entry><title type="html">Kiwifruit</title><link href="http://0.0.0.0:4000/2018/08/22/kiwifruit.html" rel="alternate" type="text/html" title="Kiwifruit" /><published>2018-08-22T00:00:00-05:00</published><updated>2018-08-22T00:00:00-05:00</updated><id>http://0.0.0.0:4000/2018/08/22/kiwifruit</id><content type="html" xml:base="http://0.0.0.0:4000/2018/08/22/kiwifruit.html">&lt;p&gt;Kiwifruit (often abbreviated as kiwi), or Chinese gooseberry is the edible
berry of several species of woody vines in the genus Actinidia.&lt;/p&gt;

&lt;p&gt;The most common cultivar group of kiwifruit is oval, about the size of a large
hen’s egg (5–8 cm (2.0–3.1 in) in length and 4.5–5.5 cm (1.8–2.2 in) in
diameter). It has a fibrous, dull greenish-brown skin and bright green or
golden flesh with rows of tiny, black, edible seeds. The fruit has a soft
texture, with a sweet and unique flavor.&lt;/p&gt;</content><author><name>ted</name></author><summary type="html">Kiwifruit (often abbreviated as kiwi), or Chinese gooseberry is the edible berry of several species of woody vines in the genus Actinidia. The most common cultivar group of kiwifruit is oval, about the size of a large hen’s egg (5–8 cm (2.0–3.1 in) in length and 4.5–5.5 cm (1.8–2.2 in) in diameter). It has a fibrous, dull greenish-brown skin and bright green or golden flesh with rows of tiny, black, edible seeds. The fruit has a soft texture, with a sweet and unique flavor.</summary></entry><entry><title type="html">Apples</title><link href="http://0.0.0.0:4000/2018/08/21/apples.html" rel="alternate" type="text/html" title="Apples" /><published>2018-08-21T00:00:00-05:00</published><updated>2018-08-21T00:00:00-05:00</updated><id>http://0.0.0.0:4000/2018/08/21/apples</id><content type="html" xml:base="http://0.0.0.0:4000/2018/08/21/apples.html">&lt;p&gt;An apple is a sweet, edible fruit produced by an apple tree.&lt;/p&gt;

&lt;p&gt;Apple trees are cultivated worldwide, and are the most widely grown species in
the genus Malus. The tree originated in Central Asia, where its wild ancestor,
Malus sieversii, is still found today. Apples have been grown for thousands of
years in Asia and Europe, and were brought to North America by European
colonists.&lt;/p&gt;</content><author><name>jill</name></author><summary type="html">An apple is a sweet, edible fruit produced by an apple tree. Apple trees are cultivated worldwide, and are the most widely grown species in the genus Malus. The tree originated in Central Asia, where its wild ancestor, Malus sieversii, is still found today. Apples have been grown for thousands of years in Asia and Europe, and were brought to North America by European colonists.</summary></entry><entry><title type="html">Bananas</title><link href="http://0.0.0.0:4000/2018/08/20/bananas.html" rel="alternate" type="text/html" title="Bananas" /><published>2018-08-20T00:00:00-05:00</published><updated>2018-08-20T00:00:00-05:00</updated><id>http://0.0.0.0:4000/2018/08/20/bananas</id><content type="html" xml:base="http://0.0.0.0:4000/2018/08/20/bananas.html">&lt;p&gt;A banana is an edible fruit – botanically a berry – produced by several kinds
of large herbaceous flowering plants in the genus Musa.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;바나나를 먹었습니다. 오늘은 …
&lt;span style=&quot;color:blue&quot;&gt;some &lt;strong&gt;blue&lt;/strong&gt; text&lt;/span&gt;.
아 이게 되는 군여
&lt;br /&gt; &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;\&lt;/p&gt;

&lt;p&gt;안녕하세요 이게 왜 안되는지&lt;/p&gt;

&lt;p&gt;잘 모르겠어요 …. 좀 알려주세요 …&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sfds&lt;/p&gt;

&lt;p&gt;&lt;mark style=&quot;background-color: #24292e&quot;&gt;&lt;font color=&quot;white&quot;&gt; 회색 &lt;/font&gt;&lt;/mark&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;안녕하세요&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;고정 위치(fixed position) 지정 방식 &lt;br /&gt;
고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;p&gt;즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.fixed { position: fixed; top: 0; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습이댜ㅏ 띄어쓰기가 왜 안되나여 ?&lt;/p&gt;

&lt;p&gt;절대 위치(absolute position) 지정 방식&lt;/p&gt;

&lt;p&gt;절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다.&lt;/p&gt;

&lt;p&gt;단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.absolute { position: absolute; top: 50px; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다.
정적 위치(static position) 지정 방식과 다른 방식들과의 차이점
정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .static { position: static; }

    .relative { position: relative; }

    .fixed { position: fixed; }

    .absolute { position: absolute; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;z-index 속성
HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다.&lt;/p&gt;

&lt;p&gt;z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다.&lt;/p&gt;

&lt;p&gt;스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .last {

        position: fixed;

        top: 180px; 

        left: 120px; 

        z-index: -1; 

    }

&lt;/style&gt;

&lt;p&gt;고정 위치(fixed position) 지정 방식
고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;p&gt;즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.fixed { position: fixed; top: 0; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;절대 위치(absolute position) 지정 방식
절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다.&lt;/p&gt;

&lt;p&gt;단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.absolute { position: absolute; top: 50px; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다.
정적 위치(static position) 지정 방식과 다른 방식들과의 차이점
정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .static { position: static; }

    .relative { position: relative; }

    .fixed { position: fixed; }

    .absolute { position: absolute; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;z-index 속성
HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다.&lt;/p&gt;

&lt;p&gt;z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다.&lt;/p&gt;

&lt;p&gt;스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .last {

        position: fixed;

        top: 180px; 

        left: 120px; 

        z-index: -1; 

    }

&lt;/style&gt;

&lt;p&gt;고정 위치(fixed position) 지정 방식
고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;p&gt;즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.fixed { position: fixed; top: 0; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;절대 위치(absolute position) 지정 방식
절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다.&lt;/p&gt;

&lt;p&gt;단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.absolute { position: absolute; top: 50px; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다.
정적 위치(static position) 지정 방식과 다른 방식들과의 차이점
정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .static { position: static; }

    .relative { position: relative; }

    .fixed { position: fixed; }

    .absolute { position: absolute; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;z-index 속성
HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다.&lt;/p&gt;

&lt;p&gt;z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다.&lt;/p&gt;

&lt;p&gt;스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .last {

        position: fixed;

        top: 180px; 

        left: 120px; 

        z-index: -1; 

    }

&lt;/style&gt;

&lt;p&gt;고정 위치(fixed position) 지정 방식
고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;p&gt;즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.fixed { position: fixed; top: 0; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;절대 위치(absolute position) 지정 방식
절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다.&lt;/p&gt;

&lt;p&gt;단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    div.absolute { position: absolute; top: 50px; right: 0; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다.
정적 위치(static position) 지정 방식과 다른 방식들과의 차이점
정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .static { position: static; }

    .relative { position: relative; }

    .fixed { position: fixed; }

    .absolute { position: absolute; }

&lt;/style&gt;

&lt;p&gt;코딩연습 ▶&lt;/p&gt;

&lt;p&gt;z-index 속성
HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다.&lt;/p&gt;

&lt;p&gt;z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다.&lt;/p&gt;

&lt;p&gt;스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다.&lt;/p&gt;

&lt;p&gt;예제&lt;/p&gt;

&lt;style&gt;

    .last {

        position: fixed;

        top: 180px; 

        left: 120px; 

        z-index: -1; 

    }

&lt;/style&gt;</content><author><name>jill</name></author><summary type="html">A banana is an edible fruit – botanically a berry – produced by several kinds of large herbaceous flowering plants in the genus Musa. 바나나를 먹었습니다. 오늘은 … some blue text. 아 이게 되는 군여 \ 안녕하세요 이게 왜 안되는지 잘 모르겠어요 …. 좀 알려주세요 … body { transform: translate(2px); } sfds 회색 &amp;lt;h1&amp;gt;안녕하세요&amp;lt;/h1&amp;gt; 고정 위치(fixed position) 지정 방식 고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다. 즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다. 예제 코딩연습이댜ㅏ 띄어쓰기가 왜 안되나여 ? 절대 위치(absolute position) 지정 방식 절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다. 단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다. 하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다. 예제 코딩연습 ▶ 위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다. 정적 위치(static position) 지정 방식과 다른 방식들과의 차이점 정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다. 상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함. 고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함. 절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함. 예제 코딩연습 ▶ z-index 속성 HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다. z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다. 스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다. 예제 고정 위치(fixed position) 지정 방식 고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다. 즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다. 예제 코딩연습 ▶ 절대 위치(absolute position) 지정 방식 절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다. 단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다. 하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다. 예제 코딩연습 ▶ 위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다. 정적 위치(static position) 지정 방식과 다른 방식들과의 차이점 정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다. 상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함. 고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함. 절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함. 예제 코딩연습 ▶ z-index 속성 HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다. z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다. 스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다. 예제 고정 위치(fixed position) 지정 방식 고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다. 즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다. 예제 코딩연습 ▶ 절대 위치(absolute position) 지정 방식 절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다. 단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다. 하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다. 예제 코딩연습 ▶ 위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다. 정적 위치(static position) 지정 방식과 다른 방식들과의 차이점 정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다. 상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함. 고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함. 절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함. 예제 코딩연습 ▶ z-index 속성 HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다. z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다. 스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다. 예제 고정 위치(fixed position) 지정 방식 고정 위치(fixed position) 지정 방식은 뷰포트(viewport)를 기준으로 위치를 설정하는 방식입니다. 즉, 웹 페이지가 스크롤 되어도 고정 위치로 지정된 요소는 항상 같은 곳에 위치하게 됩니다. 예제 코딩연습 ▶ 절대 위치(absolute position) 지정 방식 절대 위치(absolute position) 지정 방식은 고정 위치가 뷰포트를 기준으로 위치를 결정하는 것과 비슷하게 동작합니다. 단지 뷰포트(viewport)를 기준으로 하는 것이 아닌 위치가 설정된 조상(ancestor) 요소를 기준으로 위치를 설정하게 됩니다. 하지만 위치가 설정된 조상(ancestor) 요소를 가지지 않는다면, HTML 문서의 body 요소를 기준으로 위치를 설정하게 됩니다. 예제 코딩연습 ▶ 위치가 설정된 요소라는 것은 정적 위치(static position) 지정 방식을 제외한 다른 방식(relative, fixed, absolute)으로 위치가 설정된 요소를 의미합니다. 정적 위치(static position) 지정 방식과 다른 방식들과의 차이점 정적 위치(static position) 지정 방식을 제외한 나머지 다른 방식(relative, fixed, absolute)들은 전부 어떤 기준에 대해 해당 요소의 상대적인 위치를 설정하는 방식입니다. 상대 위치(relative position) : 해당 요소가 정적 위치 지정 방식일 때의 위치에 상대적으로 위치함. 고정 위치(fixed position) : 뷰포트(viewport)에 상대적으로 위치함. 절대 위치(absolute position) : 위치가 설정된 바로 상위의 조상(ancestor) 요소에 상대적으로 위치함. 예제 코딩연습 ▶ z-index 속성 HTML 요소의 위치를 설정하게 되면 어떤 요소들은 설정된 위치 및 방식에 따라 서로 겹칠 수도 있습니다. z-index 속성은 이렇게 겹쳐지는 요소들이 쌓이는 스택(stack)의 순서를 설정합니다. 스택(stack)의 순서는 양수나 음수 모두 설정할 수 있으며, 크기가 클수록 앞쪽에 위치하고 작을수록 뒤쪽에 위치하게 됩니다. 예제</summary></entry></feed>